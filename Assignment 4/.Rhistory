#histogram for 36% outlier score.
hist(outlierObservation$ols)
############################################################################################################
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=TRUE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
install.packages("mclust")
setwd("~/Desktop/DataMining/Assignment 4/")
Complex9_RN32 <- read.table("Complex9_RN32.txt", header = FALSE, sep = ",")
normalized <- scale(Complex9_RN32[ ,1:2])
df <- data.frame(normalized)
df$V3 = Complex9_RN32[ ,3]
#Task 0
plot(Complex9_RN32$V1, Complex9_RN32$V2, col = Complex9_RN32$V3)
#Task 2
library(mclust)
mclust <- Mclust(normalized[ ,1:2])
plot(mclust)
setwd("~/Desktop/DataMining/Assignment 4/")
Complex9_RN32 <- read.table("Complex9_RN32.txt", header = FALSE, sep = ",")
normalized <- scale(Complex9_RN32[ ,1:2])
df <- data.frame(normalized)
df$V3 = Complex9_RN32[ ,3]
#Task 0
plot(Complex9_RN32$V1, Complex9_RN32$V2, col = Complex9_RN32$V3)
#Task 2
library(mclust)
mclust <- Mclust(normalized[ ,1:2])
plot(mclust)
#Task 2
library(mclust)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=TRUE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=TRUE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,5)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=TRUE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=FALSE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan",upper=FALSE))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan"))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan"))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,10)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData, numberOfClosestNeighbors){
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan"))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32,15)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
#####################################
numberOfClosestNeighbors <- 15
numberOfClosestNeighbors
Complex9_RN32 <- read.csv("~/Desktop/DataMining/Assignment 4/Complex9_RN32.txt",header = FALSE) #Romita, change working directory.
#Task 0
#Plot the Complex9_RN32 dataset.
library(stats)
addColor<-c("red","orange","yellow","green","green4","blue","purple","cyan","pink")
plot(Complex9_RN32$V2~Complex9_RN32$V1,col=addColor[Complex9_RN32$V3+1])
#Task 2
#First Technique: kNN function with manhattan distance.
averageDistanceOutlier <-function(XYData){
numberOfClosestNeighbors <- 15
dataset<-data.frame(x=XYData[,1],y=XYData[,2],c=XYData[,3],ols=0)
datasetDistance<-as.matrix(dist(dataset[,1:2], method= "manhattan"))
rows<-nrow(datasetDistance)
for(i in 1:rows){
list<-datasetDistance[i,]
orderedList<-order(list,decreasing= FALSE)
average<-0
for(j in 2:(numberOfClosestNeighbors+1)){
average<-average+datasetDistance[i,orderedList[j]]
}
average<-average/numberOfClosestNeighbors
dataset[i,]$ols <-average
}
return(dataset)
}
#Task 3
#Calculate the outlier score 'ols' and write to file named X.
averageDistanceOutlierResult<-averageDistanceOutlier(Complex9_RN32)
write.csv(averageDistanceOutlierResult,"X.csv")
#Order the outlier score descending in dataset.
ol<-order(averageDistanceOutlierResult$ols,decreasing = T)
outlierScoreDescending<-averageDistanceOutlierResult[ol,]
#Vizualize the first 9% and 91%
outlierObservation = outlierScoreDescending[1:360,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[361:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 18% and 82%
outlierObservation = outlierScoreDescending[1:720,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[721:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#Vizualize the first 36% and 64%
outlierObservation= outlierScoreDescending[1:1440,]
plot(outlierObservation$y~outlierObservation$x,col=addColor[outlierObservation$c+1])
normalObservation = outlierScoreDescending[1441:3999,]
plot(normalObservation$y~normalObservation$x,col=addColor[normalObservation$c+1])
#histogram for 36% outlier score.
hist(outlierObservation$ols)
